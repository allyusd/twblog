<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.2">Jekyll</generator><link href="https://twblog.hongjianching.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://twblog.hongjianching.com/" rel="alternate" type="text/html" /><updated>2018-10-01T22:08:08+08:00</updated><id>https://twblog.hongjianching.com/</id><title type="html">Jian-Ching 記事本</title><subtitle>An notebook website.</subtitle><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><entry><title type="html">2019 iT 邦幫忙鐵人賽 目錄及前言</title><link href="https://twblog.hongjianching.com/2018/10/01/2019-ithelp-ironman-30-days-challenge-index/" rel="alternate" type="text/html" title="2019 iT 邦幫忙鐵人賽 目錄及前言" /><published>2018-10-01T00:00:00+08:00</published><updated>2018-10-01T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2018/10/01/2019-ithelp-ironman-30-days-challenge-index</id><content type="html" xml:base="https://twblog.hongjianching.com/2018/10/01/2019-ithelp-ironman-30-days-challenge-index/">&lt;p&gt;第一篇，照慣例(誰說的？)用來當目錄和前言，尤其是這次沒有明確主題的系列，更是需要目錄，因為連我自己都不知道會有哪些文章。(逃~)&lt;/p&gt;

&lt;h1 id=&quot;參賽&quot;&gt;參賽&lt;/h1&gt;

&lt;p&gt;大概 1、2 年前就知道 iT 邦幫忙鐵人賽，雖然感到興趣，但一直沒有行動，主要原因是懶(真好意思說)，次要原因就是知道的時候已經開賽了。這次被室友提醒這個活動，決定挑戰一下。&lt;/p&gt;

&lt;h2 id=&quot;參賽主要目的&quot;&gt;參賽主要目的&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;為明年鐵人賽準備&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本來打算準備一年，明年再參加的，但是想想，沒參加過怎麼知道該準備什麼？該注意什麼？該改進什麼呢？所以就報名參賽了。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;清除堆積的筆記&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://twblog.hongjianching.com/&quot;&gt;個人部落格 - Jian-Ching 記事本&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;雖然自己的部落格從去年 4 月就建立了，但是至今 1 年半過去，文章數還是寥寥無幾，其中還有從舊站搬過來的，令人汗顏。&lt;/p&gt;

&lt;p&gt;相反的，hackmd 中好幾篇筆記堆積已久，利用這個機會強迫自己清理一下。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;主題&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;這次的系列文章雖然都跟軟體開發有關，但沒有特定的主題。從筆記中找到的 tag 有&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DevOps、CI、CD
    &lt;ul&gt;
      &lt;li&gt;GitLab&lt;/li&gt;
      &lt;li&gt;Jenkins&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Docker&lt;/li&gt;
  &lt;li&gt;Shell Script&lt;/li&gt;
  &lt;li&gt;Agile&lt;/li&gt;
  &lt;li&gt;Ubuntu&lt;/li&gt;
  &lt;li&gt;Qt&lt;/li&gt;
  &lt;li&gt;C#&lt;/li&gt;
  &lt;li&gt;Angular&lt;/li&gt;
  &lt;li&gt;Database&lt;/li&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Socket&lt;/li&gt;
  &lt;li&gt;Game programming&lt;/li&gt;
  &lt;li&gt;Software &amp;amp; Tool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上述主題不一定會出現，對特定主題有興趣的話，可以留言作為發文參考。
(如果有人在看的話 XD)&lt;/p&gt;

&lt;h1 id=&quot;目錄&quot;&gt;目錄&lt;/h1&gt;

&lt;p&gt;Day01 - 2019 iT 邦幫忙鐵人賽 目錄及前言&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="2019-iT-邦幫忙鐵人賽" /><summary type="html">第一篇，照慣例(誰說的？)用來當目錄和前言，尤其是這次沒有明確主題的系列，更是需要目錄，因為連我自己都不知道會有哪些文章。(逃~)</summary></entry><entry><title type="html">Visual Studio Precompiled Headers setting issues</title><link href="https://twblog.hongjianching.com/2018/09/12/visual-studio-precompiled-headers-setting-issues/" rel="alternate" type="text/html" title="Visual Studio Precompiled Headers setting issues" /><published>2018-09-12T00:00:00+08:00</published><updated>2018-09-12T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2018/09/12/visual-studio-precompiled-headers-setting-issues</id><content type="html" xml:base="https://twblog.hongjianching.com/2018/09/12/visual-studio-precompiled-headers-setting-issues/">&lt;h2 id=&quot;precompiled-headers&quot;&gt;Precompiled Headers&lt;/h2&gt;
&lt;p&gt;最近發現專案使用的 Precompiled Headers 設定錯誤，增加了 94% 的建置時間。&lt;/p&gt;

&lt;p&gt;以下是錯誤的專案設定
&lt;img src=&quot;/assets/images/2018-09-12-visual-studio-precompiled-headers-setting-issues/2018-09-12_20-24-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在專案中的 Precompiled Headers 設定選項雖然有三個，分別是&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Create(/Yc)&lt;/li&gt;
  &lt;li&gt;Use(/Yu)&lt;/li&gt;
  &lt;li&gt;Not Using Precompiled Headers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;但其實真正能選的只有兩種，就是 Create(/Yc) 不能選，因為這是給檔案設定的。
如果這個專案要啟用 Precompiled Headers 就選 Use(/Yu)，
不啟用就選 Not Using Precompiled Headers。&lt;/p&gt;

&lt;p&gt;因為這個專案要啟用，所以改為  Use(/Yu)
&lt;img src=&quot;/assets/images/2018-09-12-visual-studio-precompiled-headers-setting-issues/2018-09-12_20-25-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;就是這個小小的設定，原本要編譯 100 秒的專案，只需要 5.8 秒，足足降低了 94% 的建置時間。&lt;/p&gt;

&lt;h2 id=&quot;multi-processor-compilation&quot;&gt;Multi-processor Compilation&lt;/h2&gt;
&lt;p&gt;因為目前的電腦都有多核的設計，再啟用多核心編譯功能，設定 Multi-processor Compilation 為 Yes (/MP)
&lt;img src=&quot;/assets/images/2018-09-12-visual-studio-precompiled-headers-setting-issues/2018-09-12_20-32-50.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;啟用後建置時間只需要 3.5 秒，再節省 60% 的建置時間。&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;
&lt;p&gt;正確設定 Precompiled Headers 加上 Multi-processor Compilation，從原本的 100 秒 縮短為 3.5 秒，等於加速了 28 倍，可以大幅減少等待時間。&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="Visual-Studio" /><summary type="html">Precompiled Headers 最近發現專案使用的 Precompiled Headers 設定錯誤，增加了 94% 的建置時間。</summary></entry><entry><title type="html">Start using trello</title><link href="https://twblog.hongjianching.com/2018/08/25/start-using-trello/" rel="alternate" type="text/html" title="Start using trello" /><published>2018-08-25T00:00:00+08:00</published><updated>2018-08-25T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2018/08/25/start-using-trello</id><content type="html" xml:base="https://twblog.hongjianching.com/2018/08/25/start-using-trello/">&lt;p&gt;這篇是使用一個月 Trello 完成三張卡片的心得紀錄。&lt;/p&gt;

&lt;p&gt;我從 Welcome Board 中的紀錄找到，早在 2011 年就註冊 Trello，中間一直有斷斷續續使用一下下，但是沒有一個「長期」(超過一週)的卡片完結的。&lt;/p&gt;

&lt;p&gt;說故事之前，先上圖
&lt;img src=&quot;/assets/images/2018-08-25-start-using-trello/2018-08-25_23-03-29.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在 7/23 日的時候，開始第 N 次試用 Trello 進行個人管理，其中一張卡片就是圖中的「GitLab with JIRA Integration」。可以發現 Attachments 中的 LINK 是當天存下來的，也是第一個任務相關資訊。&lt;/p&gt;

&lt;p&gt;註：Attachments 的 LINK 太佔空間了，加上 Description 有支援 Markdown，所以後來的連結都改放那。&lt;/p&gt;

&lt;p&gt;使用上覺得最方便的是 Checklist，可以協助任務進行「細切」的動作，而且想到什麼就加上去，Trello 有手機 App，想到什麼隨時可以更新。圖片的 6 個項目，一開始根本不存在，像第 4 項「Write script setup all project」，以過去的經驗來說，我都是寫 shell script 處理自動化任務的。但因為工作上開始有使用 python 的需求，想說不然就拿這個當練習吧，所以在這項註記要使用 python 完成。&lt;/p&gt;

&lt;p&gt;剛開始使用的第一週，一直在試著調整要幾個 Board，要什麼欄位才好，覺得不用的 Board 就 Close，然後把要的卡片復製帶走。過程中蠻傷害腦細胞的，因為不知道怎麼樣比較好，後來發現都想太多了。&lt;/p&gt;

&lt;p&gt;過去我常常有些想法想進行，但如果在3天內沒有完成，那這件事就永遠不會完成了。這張卡片，從 7/23 開始，中間慢慢一個任務一個任務進行，最後在 8/23 全部完成，時間剛好整整一個月，算是蠻特別的經驗。中間雖然還會是亂開副本，像是為了 GitLab Runner 環境弄了一下 Vagrant 卡了半天，還好有明確的 Checklist，後來拉回來直接用 VirtualBox 安裝 Ubuntu 來用，至於 Vagrant 就獨立開一張卡片丟到 Backlog 去了。&lt;/p&gt;

&lt;p&gt;任務管理上，DUE DATE 是很重要的，尤其是四象限中的重要但不緊急的事項，常常被遣忘。在卡片上可以自己加上預定要執行的日期，方便提醒自己該完成這個任務。Trello 免費版支援一個 Power-Ups，非常建議開啟 Calendar，還可以同步到 Google 月曆，非常方便。&lt;/p&gt;

&lt;p&gt;對於 Trello 工具的使用，我覺得跟上週參加&lt;a href=&quot;https://agilecommtw.kktix.cc/events/kanbanbrucelee&quot;&gt;Agile Hsinchu 八月聚會: 讓李小龍幫你看見 KANBAN 的美好&lt;/a&gt;的心得一樣，「不要想太多，先開始用」。在使用的過程中，自然會找到更適合自己的方法，算是「邊移動邊開火」的實踐。&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="Trello" /><summary type="html">這篇是使用一個月 Trello 完成三張卡片的心得紀錄。</summary></entry><entry><title type="html">Qt using Logger in Unit Test</title><link href="https://twblog.hongjianching.com/2018/08/13/qt-using-logger-in-unit-test/" rel="alternate" type="text/html" title="Qt using Logger in Unit Test" /><published>2018-08-13T00:00:00+08:00</published><updated>2018-08-13T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2018/08/13/qt-using-logger-in-unit-test</id><content type="html" xml:base="https://twblog.hongjianching.com/2018/08/13/qt-using-logger-in-unit-test/">&lt;p&gt;先來一張 Test Pass 的結果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-08-13-qt-using-logger-in-unit-test/2018-08-13_20-07-59.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;legacy-code&quot;&gt;Legacy Code&lt;/h2&gt;
&lt;p&gt;開始主題前，先來聊一聊 Legacy Code，&lt;/p&gt;

&lt;p&gt;在 &lt;a href=&quot;https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot;&gt;Working Effectively with Legacy Code&lt;/a&gt; 中，作者對於 Legacy Code 的定義為，沒有測試的程式碼。因為缺乏測試，所以害怕去修改現有的程式碼。久而久之，就越來越不敢修改了，因為你不知道改了之後會弄壞了什麼。&lt;/p&gt;

&lt;h3 id=&quot;高偶合&quot;&gt;高偶合&lt;/h3&gt;
&lt;p&gt;在實際案例上，往往 Legacy Code 又有各種疊床架屋的情況，常常會牽一髮而動全身。
所以要處理 Legacy Code，基本的動作是加上單元測試 (Unit Test)。&lt;/p&gt;

&lt;h3 id=&quot;缺乏可測試性&quot;&gt;缺乏可測試性&lt;/h3&gt;
&lt;p&gt;要加上單元測試，就不可避免會遇到程式缺乏可測試性的問題，偏偏 Legacy Code 往往欠缺可測試性。&lt;/p&gt;

&lt;h3 id=&quot;重構&quot;&gt;重構&lt;/h3&gt;
&lt;p&gt;想要擁有可測試性，就要將程式改寫，需要進行重構。然而，重構是有風險的，建議先寫測試再開始重構。&lt;/p&gt;

&lt;h3 id=&quot;先有雞先有蛋&quot;&gt;先有雞？先有蛋？&lt;/h3&gt;
&lt;p&gt;很好，我們已經陷入了無窮迴圈，可能有人耐不住決定打掉重練了。別急，讓我們回到主題。&lt;/p&gt;

&lt;h2 id=&quot;利用-logger-協助-unit-test&quot;&gt;利用 Logger 協助 Unit Test&lt;/h2&gt;
&lt;p&gt;存活下來的 Legacy Code 專案，通常埋有不少 Log，就算沒有，補上新的 Log 也是很輕易的，我們可以利用這些 Log 進行 Unit Test。&lt;/p&gt;

&lt;p&gt;以 Qt 來說，這是一段產品代碼，範例中很簡單，你可以想像他是一個 1000 行中的某段函式。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;QString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getHelloMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;helloMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		 
	&lt;span class=&quot;n&quot;&gt;qDebug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;helloMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toStdString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;helloMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;中間有使用 Qt logger 進行輸出，借助於 Qt logging framework 的完善設計，可以直接利用 qInstallMessageHandler 函式進行注入。在其它架構或語言，試著找到 ILog 或是 LogFactory 之類的方法。&lt;/p&gt;

&lt;p&gt;下面是 Unit Test 中使用 logger 的方法&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_loggerMessages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;myMessageOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QtMsgType&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QMessageLogContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;g_loggerMessages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toStdString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;TEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestLogic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HelloMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;qInstallMessageHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myMessageOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;Logic&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getHelloMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Jian-Ching&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toStdString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;EXPECT_EQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_loggerMessages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello Jian-Ching&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;這個技巧可以利用最低的成本，最小的改變為 Legacy Code 補上 Unit Test，接著透過 &lt;a href=&quot;https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot;&gt;Working Effectively with Legacy Code&lt;/a&gt; 中的技巧，開始拆解程式間的相依性。&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="Qt" /><category term="Unit-Test" /><category term="Visual-Studio" /><summary type="html">先來一張 Test Pass 的結果</summary></entry><entry><title type="html">Qt Unit Test with Visual Studio</title><link href="https://twblog.hongjianching.com/2018/07/28/qt-unit-test-with-visual-studio/" rel="alternate" type="text/html" title="Qt Unit Test with Visual Studio" /><published>2018-07-28T00:00:00+08:00</published><updated>2018-07-28T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2018/07/28/qt-unit-test-with-visual-studio</id><content type="html" xml:base="https://twblog.hongjianching.com/2018/07/28/qt-unit-test-with-visual-studio/">&lt;p&gt;基於現成的 Visual Studio 套件 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ChristianSoltenborn.GoogleTestAdapter&quot;&gt;Google Test Adapter&lt;/a&gt;，直接借用 &lt;a href=&quot;https://github.com/google/googletest&quot;&gt;Google Test&lt;/a&gt; 來進行 Qt Unit Test。&lt;/p&gt;

&lt;p&gt;有機會再來整合 Qt 自己的 &lt;a href=&quot;http://doc.qt.io/qt-5/qttest-index.html&quot;&gt;Qt Test&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/allyusd/qt-vs-unit-test&quot;&gt;Example Code&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;建立-vs-google-test-專案&quot;&gt;建立 VS Google Test 專案&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-07-28-qt-unit-test-with-visual-studio/2018-07-28_16-41-53.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;建立後會有一個一定會通過的 Unit Test&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;TEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestCaseName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;EXPECT_EQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;EXPECT_TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Run Test&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-07-28-qt-unit-test-with-visual-studio/2018-07-28_17-26-18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;編寫-unit-test&quot;&gt;編寫 Unit Test&lt;/h2&gt;

&lt;p&gt;修改 Unit Test 如下&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;TEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestLogic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HelloMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Logic&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getHelloMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Jian-Ching&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toStdString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;EXPECT_EQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello Jian-Ching&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;新增 Logic Class 及 getHelloMessage 函式&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;QString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getHelloMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Run Test, 我們會得到一個紅燈&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-07-28-qt-unit-test-with-visual-studio/2018-07-28_20-24-27.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;實作-qt-程式碼&quot;&gt;實作 Qt 程式碼&lt;/h2&gt;

&lt;p&gt;實作 getHelloMessage 函式&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;QString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getHelloMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Run Test, 成功通過測試&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-07-28-qt-unit-test-with-visual-studio/2018-07-28_17-51-25.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;其它&quot;&gt;其它&lt;/h2&gt;
&lt;p&gt;如果你的 Goolge Test Apapter 發生錯誤，可以確認一下是否是遇到這個問題，如果問題還未修復，可以先將 Visual Studio 切換為英文語系即可正常使用。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/TestAdapterForGoogleTest/issues/121&quot;&gt;Google test adapter does not work when the UI of Visual Studio is non english · Issue #121 · Microsoft/TestAdapterForGoogleTest&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="Qt" /><category term="Unit-Test" /><category term="Visual-Studio" /><summary type="html">基於現成的 Visual Studio 套件 Google Test Adapter，直接借用 Google Test 來進行 Qt Unit Test。</summary></entry><entry><title type="html">CSS DIV 問題</title><link href="https://twblog.hongjianching.com/2018/01/26/css-div-problem/" rel="alternate" type="text/html" title="CSS DIV 問題" /><published>2018-01-26T00:00:00+08:00</published><updated>2018-01-26T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2018/01/26/css-div-problem</id><content type="html" xml:base="https://twblog.hongjianching.com/2018/01/26/css-div-problem/">&lt;p&gt;這是我遇到的問題，當右邊 div 比左邊高度還少的時候，會從下方往上堆疊。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-01-26-css-div-problem/002.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這是 html 的部份&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;column&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block1 highlight&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;column&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block2 highlight&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;這是 css 的部份&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.row&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;table-layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.column&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;table-cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#666666&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.block1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;153&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.block2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;153&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.highlight&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;153&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;中間試了幾種改法都不太滿意，後來發現這個例子滿足我希望達到的效果，當右邊 div 比左邊高度還少的時候，會從上而下依序顯示。跟原本的差異只有 div 中間有 a1, a2, a3, b1, b2, b3 文字。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-01-26-css-div-problem/001.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;經過幾次的測試之後，發現如果 div 中間有文字會從上而下顯示，如果沒有文字，會從下而上堆疊。&lt;/p&gt;

&lt;p&gt;最後的解決方案是放上全型空白。&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;column&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;　&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block1 highlight&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;　&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;　&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;column&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;　&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block2 highlight&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;　&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;block2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;　&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="CSS" /><summary type="html">這是我遇到的問題，當右邊 div 比左邊高度還少的時候，會從下方往上堆疊。</summary></entry><entry><title type="html">Angular 使用環境變數</title><link href="https://twblog.hongjianching.com/2018/01/22/angular-using-environment-variables/" rel="alternate" type="text/html" title="Angular 使用環境變數" /><published>2018-01-22T00:00:00+08:00</published><updated>2018-01-22T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2018/01/22/angular-using-environment-variables</id><content type="html" xml:base="https://twblog.hongjianching.com/2018/01/22/angular-using-environment-variables/">&lt;p&gt;Angular 專案中，如果有依環境不同而需要不同的設定時，像是 apiUrl，該如何處理？&lt;/p&gt;

&lt;h2 id=&quot;開發環境及生產環境&quot;&gt;開發環境及生產環境&lt;/h2&gt;

&lt;p&gt;使用 &lt;a href=&quot;https://github.com/angular/angular-cli&quot;&gt;Angular CLI&lt;/a&gt; 建立的專案預設會有兩個環境設定，一個是開發環境，另一個是生產環境，分別由 &lt;strong&gt;environment.ts&lt;/strong&gt; 及 &lt;strong&gt;environment.prod.ts&lt;/strong&gt; 兩個檔案所描述。&lt;/p&gt;

&lt;p&gt;常用的指令，像是 ng serve 時，預設使用開發環境；使用 ng build –prod 時，則會使用生產環境。&lt;/p&gt;

&lt;h2 id=&quot;新增及使用環境變數&quot;&gt;新增及使用環境變數&lt;/h2&gt;

&lt;p&gt;使 apiUrl 為例，設定兩個檔案&lt;/p&gt;

&lt;p&gt;environment.ts:&lt;/p&gt;
&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;apiUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost/api/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;environment.prod.ts:&lt;/p&gt;
&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;apiUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://demo.com/api/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然後編輯 foo.service.ts&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../../environments/environment'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;‧‧‧&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseUrl&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apiUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;‧‧‧&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在開發環境時，baseUrl 是 ‘http://localhost/api/foo’&lt;/p&gt;

&lt;p&gt;在生產環境時，baseUrl 是 ‘http://demo.com/api/foo’&lt;/p&gt;

&lt;p&gt;這樣就可以達到開發跟生產環境使用不同的設定。&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/beautiful-angular/angular-2-and-environment-variables-59c57ba643be&quot;&gt;Angular 2 and environment variables&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://alligator.io/angular/environment-variables/&quot;&gt;Environment Variables in Angular&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="Angular" /><summary type="html">Angular 專案中，如果有依環境不同而需要不同的設定時，像是 apiUrl，該如何處理？</summary></entry><entry><title type="html">ASP.Net Core Web API 使用 Entity Framework Core 和 PostgreSQL</title><link href="https://twblog.hongjianching.com/2018/01/15/asp-dotnet-core-web-api-using-entity-framework-core-and-postgresql/" rel="alternate" type="text/html" title="ASP.Net Core Web API 使用 Entity Framework Core 和 PostgreSQL" /><published>2018-01-15T00:00:00+08:00</published><updated>2018-01-15T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2018/01/15/asp-dotnet-core-web-api-using-entity-framework-core-and-postgresql</id><content type="html" xml:base="https://twblog.hongjianching.com/2018/01/15/asp-dotnet-core-web-api-using-entity-framework-core-and-postgresql/">&lt;p&gt;ASP.Net Core Web API 使用 Entity Framework Core 和 PostgreSQL&lt;/p&gt;

&lt;h2 id=&quot;前提&quot;&gt;前提&lt;/h2&gt;

&lt;p&gt;如果你還沒有準備好 Visual Studio Code with .Net Core 開發環境，請先參考&lt;a href=&quot;https://twblog.hongjianching.com/2018/01/14/visual-studio-code-with-dotnet-core/&quot;&gt;使用 Visual Studio Code 開發 .Net Core&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;接著依照&lt;a href=&quot;https://docs.microsoft.com/zh-tw/aspnet/core/tutorials/web-api-vsc&quot;&gt;在 macOS、Linux 和 Windows 上，使用 ASP.NET Core MVC 和 Visual Studio Code 建立 Web API&lt;/a&gt;完成 Todo WebApi 的範例專案。&lt;/p&gt;

&lt;h2 id=&quot;使用-entity-framework-core-和-postgresql&quot;&gt;使用 Entity Framework Core 和 PostgreSQL&lt;/h2&gt;

&lt;p&gt;在 &lt;strong&gt;TodoApi.csproj&lt;/strong&gt; 新增套件參考&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;PackageReference Include=&quot;Npgsql.EntityFrameworkCore.PostgreSQL&quot; Version=&quot;2.0.0&quot; /&amp;gt;
&amp;lt;PackageReference Include=&quot;Microsoft.EntityFrameworkCore.Design&quot; Version=&quot;2.0.1&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在 &lt;strong&gt;appsettings.json&lt;/strong&gt; 新增連接字串&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;ConnectionStrings&quot;: { &quot;TodoContext&quot;: &quot;Server=localhost;User ID=postgres;Password=mysecretpassword;Database=postgres&quot; }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接著修改 &lt;strong&gt;Startup.cs&lt;/strong&gt; 程式碼，註解原本的 InMemoryDatabase，改用 PostgreSQL。&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// services.AddDbContext&amp;lt;TodoContext&amp;gt;(opt =&amp;gt; opt.UseInMemoryDatabase(&quot;TodoList&quot;));
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connectionString&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetConnectionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TodoContext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddEntityFrameworkNpgsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TodoContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseNpgsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最後別忘了在資料庫建立表單。&lt;/p&gt;

&lt;p&gt;注意，因為 C# 預設命名慣例是 PascalCase，而 PostgreSQL 預設命名慣例是 lower_case_with_underscores，所以如果 sql 的表格或欄位名稱不加上雙引號，會造成兩者不一致，這個範例是依 C# 命名慣例為主，個人習慣以 PostgreSQL 為主。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;TodoItems&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;&quot;Id&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;&quot;Name&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;&quot;IsComplete&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;Id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;以上就完成使用 Entity Framework Core 和 PostgreSQL 取代原本 InMemoryDatabase，資料可以保留下來嘍！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-01-15-asp-dotnet-core-web-api-using-entity-framework-core-and-postgresql/001.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.npgsql.org/efcore/index.html&quot;&gt;Npgsql - Getting Started&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="Visual-Studio-Code" /><category term=".Net-Core" /><category term="ASP.NET" /><category term="Web-API" /><category term="Entity-Framework-Core" /><category term="PostgreSQL" /><category term="CSharp" /><summary type="html">ASP.Net Core Web API 使用 Entity Framework Core 和 PostgreSQL</summary></entry><entry><title type="html">使用 Visual Studio Code 開發 .Net Core</title><link href="https://twblog.hongjianching.com/2018/01/14/visual-studio-code-with-dotnet-core/" rel="alternate" type="text/html" title="使用 Visual Studio Code 開發 .Net Core" /><published>2018-01-14T00:00:00+08:00</published><updated>2018-01-14T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2018/01/14/visual-studio-code-with-dotnet-core</id><content type="html" xml:base="https://twblog.hongjianching.com/2018/01/14/visual-studio-code-with-dotnet-core/">&lt;p&gt;.Net Core 是跨平台解決方案，同時 Visual Studio Code 也是跨平台開發工具，所以兩者搭配是很好的選擇。&lt;/p&gt;

&lt;h2 id=&quot;安裝-visual-studio-code-及-net-core&quot;&gt;安裝 Visual Studio Code 及 .Net Core&lt;/h2&gt;

&lt;p&gt;首先安裝 &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;，當前版本為 1.19.2。&lt;/p&gt;

&lt;p&gt;還有安裝 &lt;a href=&quot;https://www.microsoft.com/net/&quot;&gt;.NET Core&lt;/a&gt;，當前版本為：&lt;/p&gt;

&lt;p&gt;.Net Core SDK 2.1.4&lt;/p&gt;

&lt;p&gt;.Net Core Runtime 2.0.5&lt;/p&gt;

&lt;h2 id=&quot;hello-world-範例&quot;&gt;Hello World 範例&lt;/h2&gt;

&lt;p&gt;建立一個 &lt;strong&gt;hello_world&lt;/strong&gt; 資料夾，開啟 vs-code。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-01-14-visual-studio-code-with-dotnet-core/001.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然後在終端機 ( Ctrl+` ) 使用 &lt;strong&gt;new&lt;/strong&gt; 指令建立一個 console 專案。執行後會看到 vs-code 左方檔案總管已經出現專案所需的檔案。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接著使用 &lt;strong&gt;run&lt;/strong&gt; 執行程式，就會看到 &lt;strong&gt;Hello World&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet run
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-01-14-visual-studio-code-with-dotnet-core/002.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#dotnet-restore&quot;&gt;曾經使用的 dotnet restore 不見了？&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;開發及偵錯&quot;&gt;開發及偵錯&lt;/h2&gt;

&lt;p&gt;第一個檔案是 &lt;strong&gt;hello_world.csproj&lt;/strong&gt;，內容是專案相關設定。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&amp;gt;

  &amp;lt;PropertyGroup&amp;gt;
    &amp;lt;OutputType&amp;gt;Exe&amp;lt;/OutputType&amp;gt;
    &amp;lt;TargetFramework&amp;gt;netcoreapp2.0&amp;lt;/TargetFramework&amp;gt;
  &amp;lt;/PropertyGroup&amp;gt;

&amp;lt;/Project&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;另一個檔案是 &lt;strong&gt;Program.cs&lt;/strong&gt;，是已經寫好的 Hello World 程式碼。&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hello_world&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果是第一次開啟 C# 相關檔案，vs-code 會建議你安裝 C# 套件，選擇安裝。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-01-14-visual-studio-code-with-dotnet-core/003.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;安裝完重啟 vs-code 又會提示你加入偵錯相關設定檔，選擇是。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-01-14-visual-studio-code-with-dotnet-core/004.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接著稍微調整 &lt;strong&gt;Program.cs&lt;/strong&gt; 程式碼如下：&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Jian-Ching&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在 &lt;strong&gt;Console.WriteLine&lt;/strong&gt; 下一行設定中斷點 (小紅點)，然後執行 F5，別忘了左邊選擇偵錯可以看到變數資訊，滑鼠移到 &lt;strong&gt;message&lt;/strong&gt; 變數也會顯示該變數的值，最下方也有顯示輸出的結果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-01-14-visual-studio-code-with-dotnet-core/005.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;console-input&quot;&gt;Console input&lt;/h2&gt;

&lt;p&gt;如果只能顯示寫好的結果就不好玩了，接著我們讓程式能接受輸入的名字。&lt;/p&gt;

&lt;p&gt;首先要調整 vs-code 偵錯相關設定檔 &lt;strong&gt;.vscode/launch.json&lt;/strong&gt;，找到 &lt;strong&gt;console&lt;/strong&gt; 參數，改為 &lt;strong&gt;integratedTerminal&lt;/strong&gt;。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;console&quot;: &quot;integratedTerminal&quot;,
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然後修改程式碼：&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;What's your name?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ReadLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再次按下 F5 後，切換到終端機 ( Ctrl+` )&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-01-14-visual-studio-code-with-dotnet-core/006.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;教學結束，接著可以開始進行其它 C# 的練習嘍！&lt;/p&gt;

&lt;h2 id=&quot;dotnet-restore&quot;&gt;dotnet restore&lt;/h2&gt;

&lt;p&gt;如果你曾經使用過 .Net Core，那可能還紀得這個指令。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet restore
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;從 .Net Core 2.0 開炲，dotnet restore 已經隱含在所有指令，例如 new, build, run，所以不太需要單獨執行這個指令。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-tw/dotnet/core/tools/dotnet-restore?tabs=netcore2x&quot;&gt;Microsoft Docs - dotnet restore&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/other/dotnet&quot;&gt;Using .NET Core in Visual Studio Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://microsoft.com/net/core&quot;&gt;Install the C# extension from the VS Code Marketplace&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md#console-terminal-window&quot;&gt;Configurating launch.json for C# debugging&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="Visual-Studio-Code" /><category term=".Net-Core" /><category term="CSharp" /><summary type="html">.Net Core 是跨平台解決方案，同時 Visual Studio Code 也是跨平台開發工具，所以兩者搭配是很好的選擇。</summary></entry><entry><title type="html">最好的內部頂級網域 (Best internal top level domain)</title><link href="https://twblog.hongjianching.com/2017/12/21/best-internal-top-level-domain/" rel="alternate" type="text/html" title="最好的內部頂級網域 (Best internal top level domain)" /><published>2017-12-21T00:00:00+08:00</published><updated>2017-12-21T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2017/12/21/best-internal-top-level-domain</id><content type="html" xml:base="https://twblog.hongjianching.com/2017/12/21/best-internal-top-level-domain/">&lt;p&gt;你是否會在內部網路使用一些自己發明的網域名稱呢？像是&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;server1.dev&lt;/li&gt;
  &lt;li&gt;server1.test&lt;/li&gt;
  &lt;li&gt;server1.apple (apple 也許是你的產品名稱)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;要注意了，這可能導致一些麻煩&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;，如果你是個謹慎的人，在使用網域前先在 &lt;a href=&quot;https://data.iana.org/TLD/tlds-alpha-by-domain.txt&quot;&gt;IANA TLD List&lt;/a&gt; 或是 &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains&quot;&gt;Wiki - List of Internet top-level domains&lt;/a&gt; 確認現實中不存在，但是這不代表之後不會被買走。&lt;/p&gt;

&lt;p&gt;事實上 .dev 已經是 Google 所有，而且計劃繼續擁有更多&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。同樣的 .apple 也已經被買下，正是你熟悉的 Apple 公司。&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;不論是不是誤打誤中，幸運的 .test 是個可接受的選項，他在 &lt;a href=&quot;https://tools.ietf.org/html/rfc2606&quot;&gt;RFC2606&lt;/a&gt; 被明確的保留下來做為&lt;strong&gt;測試&lt;/strong&gt;使用。該文件只保留了四個頂級網域和三個次級網域。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;.test&lt;/li&gt;
  &lt;li&gt;.example&lt;/li&gt;
  &lt;li&gt;.invalid&lt;/li&gt;
  &lt;li&gt;.localhost&lt;/li&gt;
  &lt;li&gt;example.com&lt;/li&gt;
  &lt;li&gt;example.net&lt;/li&gt;
  &lt;li&gt;example.org&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;雖然有人提出&lt;a href=&quot;https://tools.ietf.org/html/draft-chapin-rfc2606bis-00&quot;&gt;建議&lt;/a&gt;希望保留更多的頂級網域，像是 .local、.localdomain、.domain、.lan、.home、.host，可惜沒有被接受。&lt;/p&gt;

&lt;p&gt;最好的方式是直接買一個網域，建立次級網域當內部使用。&lt;/p&gt;

&lt;p&gt;像是購買 allyusd.com，然後使用 dev.allyusd.com 當作內部網域。&lt;/p&gt;

&lt;p&gt;另一個可接受的方式是使用 .test 或是 .example，因為 .invalid 語義上不太好，而 .localhost 又&lt;a href=&quot;https://tools.ietf.org/html/draft-west-let-localhost-be-localhost-06&quot;&gt;有人提出&lt;/a&gt;希望他真的是 localhost。&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.pluralsight.com/blog/software-development/choose-internal-top-level-domain-name&quot;&gt;Why MyCompany.Local is a Bad Idea&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://iyware.com/dont-use-dev-for-development/&quot;&gt;Don’t Use .dev For Development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.itprotoday.com/management-mobility/q-can-i-use-local-or-pvt-top-level-domain-tld-names-part-active-directory-ad&quot;&gt;Q. Can I use the .local or .pvt top-level domain (TLD) names as part of an Active Directory (AD) tree name?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://isc.sans.edu/forums/diary/Stop+Using+internal+Top+Level+Domain+Names/21095/&quot;&gt;Stop Using “internal” Top Level Domain Names&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://serverfault.com/questions/17255/top-level-domain-domain-suffix-for-private-network&quot;&gt;Top level domain/domain suffix for private network?&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://ma.ttias.be/chrome-force-dev-domains-https-via-preloaded-hsts/&quot;&gt;Chrome 63 forces .dev domains to HTTPS via preloaded HSTS&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.registry.google/&quot;&gt;Google Registry&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.iana.org/domains/root/db&quot;&gt;IANA - Root Zone Database&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="Domain" /><summary type="html">你是否會在內部網路使用一些自己發明的網域名稱呢？像是</summary></entry></feed>