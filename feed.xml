<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.2">Jekyll</generator><link href="https://twblog.hongjianching.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://twblog.hongjianching.com/" rel="alternate" type="text/html" /><updated>2020-06-07T20:16:45+08:00</updated><id>https://twblog.hongjianching.com/</id><title type="html">Jian-Ching 記事本</title><subtitle>An notebook website.</subtitle><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><entry><title type="html">啟用 Nginx 狀態功能並且使用 Grafana</title><link href="https://twblog.hongjianching.com/2020/06/07/enable-nginx-status-with-grafana/" rel="alternate" type="text/html" title="啟用 Nginx 狀態功能並且使用 Grafana" /><published>2020-06-07T00:00:00+08:00</published><updated>2020-06-07T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/06/07/enable-nginx-status-with-grafana</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/06/07/enable-nginx-status-with-grafana/">&lt;p&gt;從 Grafana 看到的結果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-06-07/2020-06-07_20-13-21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;開啟-nginx-狀態&quot;&gt;開啟 Nginx 狀態&lt;/h2&gt;

&lt;p&gt;預設的 docker image 已經有內建 ngx_http_stub_status_module，
可以透過設定檔開啟這個功能&lt;/p&gt;

&lt;p&gt;nginx.conf&lt;/p&gt;

&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; {
  &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; = /&lt;span class=&quot;n&quot;&gt;basic_status&lt;/span&gt; {
    &lt;span class=&quot;n&quot;&gt;stub_status&lt;/span&gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以查詢目前的狀態&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-06-07/2020-06-07_20-12-48.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_stub_status_module.html&quot;&gt;Module ngx_http_stub_status_module&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="Nginx" /><category term="Grafana" /><summary type="html">從 Grafana 看到的結果</summary></entry><entry><title type="html">Sequelize 進行 Raw Query 遇到 SQL Injection 問題</title><link href="https://twblog.hongjianching.com/2020/05/31/sequelize-raw-query-meet-sql-injection-issue/" rel="alternate" type="text/html" title="Sequelize 進行 Raw Query 遇到 SQL Injection 問題" /><published>2020-05-31T00:00:00+08:00</published><updated>2020-05-31T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/05/31/sequelize-raw-query-meet-sql-injection-issue</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/05/31/sequelize-raw-query-meet-sql-injection-issue/">&lt;p&gt;Sequelize 除了使用 Model Query 之外，還可以透過 SQL 語法直接進行 Raw Query，但是會碰上 SQL Injection 問題&lt;/p&gt;

&lt;h2 id=&quot;model-query&quot;&gt;Model Query&lt;/h2&gt;

&lt;p&gt;這是使用 Model Query 方法的範例&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Model Query&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;way1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findOne&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TW'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'createTime'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'DESC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;raw-queries---sql-injection&quot;&gt;Raw Queries - SQL Injection&lt;/h2&gt;

&lt;p&gt;這是直接使用 SQL 語法進行查詢，但是會造成 SQL Injection 的範例&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;way2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sequelize&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Sequelize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sequelize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sl&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TW'&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createTime&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;desc&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sequelize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mapToModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// pass true here if you have any mapped fields&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;raw-queries&quot;&gt;Raw Queries&lt;/h2&gt;

&lt;p&gt;這是把參數安全替換，解決 SQL Injection 的範例&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;way3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sequelize&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Sequelize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sequelize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sl&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TW'&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createTime&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;desc&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;replacements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sequelize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ShoppingLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;replacements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;replacements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mapToModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// pass true here if you have any mapped fields&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://sequelize.org/master/manual/raw-queries.html&quot;&gt;Manual - Sequelize&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="Sequelize" /><category term="SQL-Injection" /><summary type="html">Sequelize 除了使用 Model Query 之外，還可以透過 SQL 語法直接進行 Raw Query，但是會碰上 SQL Injection 問題</summary></entry><entry><title type="html">使用 Grafana Influxdb Telegraf 監控系統</title><link href="https://twblog.hongjianching.com/2020/05/23/grafana-influxdb-telegraf-system-monitor/" rel="alternate" type="text/html" title="使用 Grafana Influxdb Telegraf 監控系統" /><published>2020-05-23T00:00:00+08:00</published><updated>2020-05-23T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/05/23/grafana-influxdb-telegraf-system-monitor</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/05/23/grafana-influxdb-telegraf-system-monitor/">&lt;p&gt;系統運作一段時間之後，想要知道最近狀況是否正常，卻沒有紀錄可以查詢跟比較。為了解決這個情況，需要一套監控系統，這裡使用 Grafana Influxdb Telegraf 解決方案。&lt;/p&gt;

&lt;h2 id=&quot;成果&quot;&gt;成果&lt;/h2&gt;

&lt;p&gt;擁有一個可以查詢系統狀態的儀表板&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-05-23/2020-05-23_23-53-18.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/images/2020-05-23/2020-05-23_23-53-41.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;grafana&quot;&gt;Grafana&lt;/h2&gt;

&lt;p&gt;Grafana 主要的 Web UI 介面，透過 Influxdb 讀取紀錄資料畫出各種視覺化圖表顯示在 Web 上。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;grafana -p 3000:3000 grafana/grafana
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;啟動後使用 chrome 連到該主機的 3000 port，即可看到 Grafana 畫面
http://ip:3000/&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-05-23/2020-05-23_22-21-25.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第一次登入預設帳號密碼是 admin / admin，登入後會要求設定新密碼，記得存起來&lt;/p&gt;

&lt;p&gt;Note: 這個設定缺少 Grafana 的資料保存，當容器刪除後，相關資料將會遺失&lt;/p&gt;

&lt;h2 id=&quot;influxdb&quot;&gt;Influxdb&lt;/h2&gt;

&lt;p&gt;Influxdb 主要是時間序的資料庫，用來存放 Telegraf 收集的紀錄，提供給 Grafana 查詢。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;influxdb -p 8086:8086 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -e &lt;span class=&quot;nv&quot;&gt;INFLUXDB_DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;defaultdb &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -e &lt;span class=&quot;nv&quot;&gt;INFLUXDB_ADMIN_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;admin &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -e &lt;span class=&quot;nv&quot;&gt;INFLUXDB_ADMIN_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;adminpass &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -e &lt;span class=&quot;nv&quot;&gt;INFLUXDB_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -e &lt;span class=&quot;nv&quot;&gt;INFLUXDB_USER_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;userpass &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -v /data/influxdb:/var/lib/influxdb &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      influxdb:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;telegraf&quot;&gt;Telegraf&lt;/h2&gt;

&lt;p&gt;Telegraf 用來收集相關資料，傳送給 Influxdb。&lt;/p&gt;

&lt;p&gt;如果是第一次設定，可以從 docker image 取得預設設定檔&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --rm telegraf telegraf config &amp;gt; telegraf.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接著修改設定檔，其中 influxdb 的 urls 跟 hostname 要修改，hostname 預設會取 VM 名稱，但是因為跑在容器內，會取到容器的名稱，識別性太低，所以記得設定。&lt;/p&gt;

&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[&lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;]
  ...
  &lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt; = &lt;span class=&quot;s2&quot;&gt;&quot;sgp1&quot;&lt;/span&gt;

[[&lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;influxdb&lt;/span&gt;]]
  &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt; = [&lt;span class=&quot;s2&quot;&gt;&quot;http://127.0.0.1:8086&quot;&lt;/span&gt;]
  ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;除了預設的 cpu, mem 之後，也把一些預設關閉的功能開啟&lt;/p&gt;

&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[[&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;interrupts&lt;/span&gt;]]
  &lt;span class=&quot;c&quot;&gt;# no configuration
&lt;/span&gt;  
[[&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;linux_sysctl_fs&lt;/span&gt;]]
  &lt;span class=&quot;c&quot;&gt;# no configuration
&lt;/span&gt;
[[&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;]]
  &lt;span class=&quot;c&quot;&gt;# collect data only about specific interfaces
&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# interfaces = [&quot;eth0&quot;]
&lt;/span&gt;
[[&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;netstat&lt;/span&gt;]]
  &lt;span class=&quot;c&quot;&gt;# no configuration
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接著使用 docker 啟動&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;telegraf &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --network host &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-v /:/hostfs:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-v /etc:/hostfs/etc:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-v /proc:/hostfs/proc:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-v /sys:/hostfs/sys:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-v /var:/hostfs/var:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-v /run:/hostfs/run:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-e &lt;span class=&quot;nv&quot;&gt;HOST_ETC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/hostfs/etc &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-e &lt;span class=&quot;nv&quot;&gt;HOST_PROC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/hostfs/proc &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-e &lt;span class=&quot;nv&quot;&gt;HOST_SYS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/hostfs/sys &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-e &lt;span class=&quot;nv&quot;&gt;HOST_VAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/hostfs/var &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-e &lt;span class=&quot;nv&quot;&gt;HOST_RUN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/hostfs/run &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	-e &lt;span class=&quot;nv&quot;&gt;HOST_MOUNT_PREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/hostfs &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /data/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  telegraf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note: 為了收集網路資料，使用 host mode 網路模式，需要注意相關安全性問題&lt;/p&gt;

&lt;h2 id=&quot;新增-datasource&quot;&gt;新增 DataSource&lt;/h2&gt;

&lt;p&gt;DataSource 選擇 InfluxDB&lt;/p&gt;

&lt;p&gt;HTTP 的 URL 記得設定能從容器中連的到的 InfluxDB IP&lt;/p&gt;

&lt;p&gt;InfluxDB Details 輸入 telegraf&lt;/p&gt;

&lt;p&gt;最後按下 Save &amp;amp; Test&lt;/p&gt;

&lt;p&gt;出現綠底白字表示設定成功&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-05-23/2020-05-23_23-44-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;新增-dashboard&quot;&gt;新增 Dashboard&lt;/h2&gt;

&lt;p&gt;在 Dashboard 管理頁面，選擇右上角的 Import&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-05-23/2020-05-23_23-46-18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然後使用 grafana.com 上建好的設定，輸入 928&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-05-23/2020-05-23_23-47-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這麼一來就有一些基本的資料可以查詢啦&lt;/p&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/grafana/grafana&quot;&gt;grafana/grafana - Docker Hub&lt;/a&gt;
&lt;a href=&quot;https://stackoverflow.com/questions/49066607/launching-a-influxdb-container-in-docker-with-a-default-database-name&quot;&gt;Launching a InfluxDB container in docker with a default database name - Stack Overflow&lt;/a&gt;
&lt;a href=&quot;https://hub.docker.com/_/telegraf&quot;&gt;telegraf - Docker Hub&lt;/a&gt;
&lt;a href=&quot;https://github.com/influxdata/telegraf/blob/master/docs/FAQ.md#q-how-can-i-monitor-the-docker-engine-host-from-within-a-container&quot;&gt;telegraf/FAQ.md at master · influxdata/telegraf · GitHub&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="Grafana" /><category term="Influxdb" /><category term="Telegraf" /><category term="monitor" /><summary type="html">系統運作一段時間之後，想要知道最近狀況是否正常，卻沒有紀錄可以查詢跟比較。為了解決這個情況，需要一套監控系統，這裡使用 Grafana Influxdb Telegraf 解決方案。 成果 擁有一個可以查詢系統狀態的儀表板 Grafana Grafana 主要的 Web UI 介面，透過 Influxdb 讀取紀錄資料畫出各種視覺化圖表顯示在 Web 上。 docker run -d --name=grafana -p 3000:3000 grafana/grafana 啟動後使用 chrome 連到該主機的 3000 port，即可看到 Grafana 畫面 http://ip:3000/ 第一次登入預設帳號密碼是 admin / admin，登入後會要求設定新密碼，記得存起來 Note: 這個設定缺少 Grafana 的資料保存，當容器刪除後，相關資料將會遺失 Influxdb Influxdb 主要是時間序的資料庫，用來存放 Telegraf 收集的紀錄，提供給 Grafana 查詢。 docker run -d --name=influxdb -p 8086:8086 \ -e INFLUXDB_DB=defaultdb \ -e INFLUXDB_ADMIN_USER=admin \ -e INFLUXDB_ADMIN_PASSWORD=adminpass \ -e INFLUXDB_USER=user \ -e INFLUXDB_USER_PASSWORD=userpass \ -v /data/influxdb:/var/lib/influxdb \ influxdb:latest Telegraf Telegraf 用來收集相關資料，傳送給 Influxdb。 如果是第一次設定，可以從 docker image 取得預設設定檔 docker run --rm telegraf telegraf config &amp;gt; telegraf.conf 接著修改設定檔，其中 influxdb 的 urls 跟 hostname 要修改，hostname 預設會取 VM 名稱，但是因為跑在容器內，會取到容器的名稱，識別性太低，所以記得設定。 [agent] ... hostname = &quot;sgp1&quot; [[outputs.influxdb]] urls = [&quot;http://127.0.0.1:8086&quot;] ... 除了預設的 cpu, mem 之後，也把一些預設關閉的功能開啟 [[inputs.interrupts]] # no configuration [[inputs.linux_sysctl_fs]] # no configuration [[inputs.net]] # collect data only about specific interfaces # interfaces = [&quot;eth0&quot;] [[inputs.netstat]] # no configuration 接著使用 docker 啟動 docker run -d --name=telegraf \ --network host \ -v /:/hostfs:ro \ -v /etc:/hostfs/etc:ro \ -v /proc:/hostfs/proc:ro \ -v /sys:/hostfs/sys:ro \ -v /var:/hostfs/var:ro \ -v /run:/hostfs/run:ro \ -e HOST_ETC=/hostfs/etc \ -e HOST_PROC=/hostfs/proc \ -e HOST_SYS=/hostfs/sys \ -e HOST_VAR=/hostfs/var \ -e HOST_RUN=/hostfs/run \ -e HOST_MOUNT_PREFIX=/hostfs \ -v /data/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro \ telegraf Note: 為了收集網路資料，使用 host mode 網路模式，需要注意相關安全性問題 新增 DataSource DataSource 選擇 InfluxDB HTTP 的 URL 記得設定能從容器中連的到的 InfluxDB IP InfluxDB Details 輸入 telegraf 最後按下 Save &amp;amp; Test 出現綠底白字表示設定成功 新增 Dashboard 在 Dashboard 管理頁面，選擇右上角的 Import 然後使用 grafana.com 上建好的設定，輸入 928 這麼一來就有一些基本的資料可以查詢啦 Ref grafana/grafana - Docker Hub Launching a InfluxDB container in docker with a default database name - Stack Overflow telegraf - Docker Hub telegraf/FAQ.md at master · influxdata/telegraf · GitHub</summary></entry><entry><title type="html">使用 Nginx 建立 Reverse Proxy Server</title><link href="https://twblog.hongjianching.com/2020/05/17/nginx-reverse-proxy-server/" rel="alternate" type="text/html" title="使用 Nginx 建立 Reverse Proxy Server" /><published>2020-05-17T00:00:00+08:00</published><updated>2020-05-17T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/05/17/nginx-reverse-proxy-server</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/05/17/nginx-reverse-proxy-server/">&lt;p&gt;使用 Nginx 建立一個反向代理伺服器&lt;/p&gt;

&lt;p&gt;以前使用 Web Server，同一個 VM 需要多個網域對應的時候，在 Apache 會使用 VirtualHost 設定，而 Nginx 實現的功能叫 Server Blocks，詳細可以參考&lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/examples/server_blocks/&quot;&gt;官網範例&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;使用-server-blocks-的問題&quot;&gt;使用 Server Blocks 的問題&lt;/h2&gt;

&lt;p&gt;其實單純使用 Nginx 的 Server Blocks 是沒有問題的，但是在使用 Docker 時，就會出現多個網站使用同一個容器的情況，失去容器化的優勢。&lt;/p&gt;

&lt;h2 id=&quot;reverse-proxy-server&quot;&gt;Reverse Proxy Server&lt;/h2&gt;

&lt;p&gt;解決的方法很簡單，就是建立反向代理伺服器 (Reverse Proxy Server)&lt;/p&gt;

&lt;p&gt;原本的 WebSite A 獨立運作在一個容器 A&lt;/p&gt;

&lt;p&gt;另外的 WebSite B 獨立運作在一個容器 B&lt;/p&gt;

&lt;p&gt;最後建立一個 Reverse Proxy Server 運作在 容器 C，負責將各自的流量導到容器 A 跟 B。&lt;/p&gt;

&lt;h2 id=&quot;實作&quot;&gt;實作&lt;/h2&gt;

&lt;p&gt;事實上透過 Nginx 建立 Reverse Proxy 非常簡單，首先透過 nginx docker 複製一份預設的設定檔&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --name tmp-nginx-container -d nginx
docker cp tmp-nginx-container:/etc/nginx/nginx.conf nginx.conf
docker rm -f tmp-nginx-container
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改 config，在 http 中加上&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;80;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;server_name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;domain1.com;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;proxy_pass&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;http://127.0.0.1:8080;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;80;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;server_name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;domain2.com;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;proxy_pass&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;http://127.0.0.1:8081;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改 config 之後，使用自定義的 config 啟動 nginx&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --name proxy-server -v /host/path/nginx.conf:/etc/nginx/nginx.conf:ro -d -p 80:80 nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;這麼一來，當使用者透過 domain1.com 及 domain2.com 存取網站時，就會分別導到不同的地方嘍。
即可以在同一個 VM 中使用同一個 port 處理不同的網站，又不會失去容器化的功能。&lt;/p&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/_/nginx&quot;&gt;nginx - Docker Hub&lt;/a&gt;
&lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/examples/full/&quot;&gt;Full Example Configuration | NGINX&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="Nginx" /><summary type="html">使用 Nginx 建立一個反向代理伺服器</summary></entry><entry><title type="html">GitLab CI/CD 使用 Cache 和 artifacts</title><link href="https://twblog.hongjianching.com/2020/05/09/GitLab-CI-CD-use-cache-and-artifacts/" rel="alternate" type="text/html" title="GitLab CI/CD 使用 Cache 和 artifacts" /><published>2020-05-09T00:00:00+08:00</published><updated>2020-05-09T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/05/09/GitLab-CI-CD-use-cache-and-artifacts</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/05/09/GitLab-CI-CD-use-cache-and-artifacts/">&lt;p&gt;cache 跟 artifacts 字面上都有保存檔案供以後使用的意思，在 GitLab 使用要特別留意他們的定義&lt;/p&gt;

&lt;h2 id=&quot;簡答&quot;&gt;簡答&lt;/h2&gt;

&lt;p&gt;跨 pipeline 時使用 cache，同 pipeline 跨 job 時使用 artifacts&lt;/p&gt;

&lt;h2 id=&quot;介紹&quot;&gt;介紹&lt;/h2&gt;

&lt;p&gt;提醒一點，當你同時使用 caches 和 artifacts 在同一個路徑時，會被覆蓋&lt;/p&gt;

&lt;p&gt;不要使用 caches 在一個 pipeline 中不同的 job 之間傳遞檔案&lt;/p&gt;

&lt;h3 id=&quot;caches&quot;&gt;Caches&lt;/h3&gt;

&lt;p&gt;caches 是設計來保存編譯或建置用所需要的依賴庫或第三方工具，像是 npm package 之類的，只要下載過一次，就可以保存，加速下次的 pipeline。&lt;/p&gt;

&lt;p&gt;專案需要使用獨立的 caches 時，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;，利用像是環境變數 &lt;code class=&quot;highlighter-rouge&quot;&gt;CI_COMMIT_REF_SLUG&lt;/code&gt; 是 branch / tag 名稱，取 63 長度，全小寫，而且只保留英數其它換成&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;，可以用在 domain 等其它地方。&lt;/p&gt;

&lt;p&gt;舉例：&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${CI_COMMIT_REF_SLUG}&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node_modules/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h3&gt;

&lt;p&gt;如果是要用在同一個 pipeline, 不同 stage / job 之間傳遞的檔案，則應該使用 artifacts。使用 artifacts 時，會自動把檔案傳遞到後續的 job。&lt;/p&gt;

&lt;p&gt;關於 cache，可以指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; 讓每個 branch 有各自的 cache。&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dist/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.gitlab.com/ee/ci/caching/&quot;&gt;Cache dependencies in GitLab CI/CD - GitLab&lt;/a&gt;
&lt;a href=&quot;https://docs.gitlab.com/ee/ci/variables/predefined_variables.html&quot;&gt;Predefined environment variables reference - GitLab&lt;/a&gt;
&lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/README.html#cache&quot;&gt;cache - GitLab CI/CD Pipeline Configuration Reference - GitLab&lt;/a&gt;
&lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/README.html#artifacts&quot;&gt;artifacts - GitLab CI/CD Pipeline Configuration Reference - GitLab&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="GitLabCI" /><category term="CD" /><category term="DevOps" /><summary type="html">cache 跟 artifacts 字面上都有保存檔案供以後使用的意思，在 GitLab 使用要特別留意他們的定義</summary></entry><entry><title type="html">ActionHero Tasks &amp;amp; Resque Jobs 視覺化管理工具</title><link href="https://twblog.hongjianching.com/2020/05/02/actionhero-tasks-and-resque-jobs-visualization-and-managment-tools/" rel="alternate" type="text/html" title="ActionHero Tasks &amp; Resque Jobs 視覺化管理工具" /><published>2020-05-02T00:00:00+08:00</published><updated>2020-05-02T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/05/02/actionhero-tasks-and-resque-jobs-visualization-and-managment-tools</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/05/02/actionhero-tasks-and-resque-jobs-visualization-and-managment-tools/">&lt;p&gt;本篇介紹如何安裝 ah-resque-ui
&lt;a href=&quot;https://github.com/actionhero/ah-resque-ui&quot;&gt;actionhero/ah-resque-ui: Visualization and Managment tools for Actionhero Tasks &amp;amp; Resque Jobs&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;建立-actionhero-專案&quot;&gt;建立 actionhero 專案&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx actionhero generate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;安裝-ah-resque-ui&quot;&gt;安裝 ah-resque-ui&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn add ah-resque-ui
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;設定 plugin&lt;/p&gt;

&lt;p&gt;修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;./config/plugins.ts&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;ah-resque-ui&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/../../node_modules/ah-resque-ui&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;新增 &lt;code class=&quot;highlighter-rouge&quot;&gt;./src/config/ah-resque-ui.ts&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;ah-resque-ui&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// the name of the middleware(s) which will protect all actions in this plugin&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// ie middleware: ['logged-in-session', 'role-admin']&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;middleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;輸入 &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn dev&lt;/code&gt; 啟動後，連到 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8080/resque#/&lt;/code&gt; 即可看到畫面&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-05-02/0001.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;要注意兩點&lt;/p&gt;

&lt;p&gt;一、當沒有任何一個 Queue 的情況下，Overview 的圖會一直處於 loading 狀態&lt;/p&gt;

&lt;p&gt;二、UI 的資料是保留在 Client 當下，也就是只要切換頁面不會保留過去的資料，Overview 的圖會清空&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="ActionHero" /><category term="ah-resque-ui" /><summary type="html">本篇介紹如何安裝 ah-resque-ui actionhero/ah-resque-ui: Visualization and Managment tools for Actionhero Tasks &amp;amp; Resque Jobs</summary></entry><entry><title type="html">使用 VSCode debug Actionhero version 22 on windows</title><link href="https://twblog.hongjianching.com/2020/04/26/actionhero-v22-debug-with-vscode-on-windows/" rel="alternate" type="text/html" title="使用 VSCode debug Actionhero version 22 on windows" /><published>2020-04-26T00:00:00+08:00</published><updated>2020-04-26T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/04/26/actionhero-v22-debug-with-vscode-on-windows</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/04/26/actionhero-v22-debug-with-vscode-on-windows/">&lt;p&gt;在之前 &lt;a href=&quot;https://twblog.hongjianching.com/2020/03/28/actionhero-nodejs-debug-with-typescript-on-vscode/&quot;&gt;使用 VSCode Debug ActionHero (Nodejs) with TypeScript&lt;/a&gt; 文章中討論過如何使用 VSCode 對 Actionhero 專案進行 Debug，但是後來發現原本的方法失效了。&lt;/p&gt;

&lt;p&gt;在 04-23 的 Office Hours 中，&lt;a href=&quot;https://github.com/evantahler&quot;&gt;Evan Tahler&lt;/a&gt; 及 &lt;a href=&quot;https://github.com/gcoonrod&quot;&gt;Greg Coonrod&lt;/a&gt; 提供了新的設定，相關的變更在 &lt;a href=&quot;https://github.com/actionhero/actionhero/pull/1439&quot;&gt;better debugging support by evantahler · Pull Request #1439 · actionhero/actionhero&lt;/a&gt; 之中。&lt;/p&gt;

&lt;p&gt;會後，尤於環境不同(我想兩位作者都是使用 Mac 開發環境)，我在 Windows 使用新的設定時，遇到了一些問題，經過反覆嘗試，成功的使用 VSCode 進行 Debug。&lt;/p&gt;

&lt;p&gt;其中是針對 &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 的 debug script 改為 node，而非使用 ts-node-dev，原因不明，但我使用原本 script 的 ts-node-dev 版本，會發生 breakpoint 跳動的情況，似乎是 sourcemap 無法正確對應。&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tsc &amp;amp;&amp;amp; node --inspect -- ./dist/server&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;另一個是針對 &lt;code class=&quot;highlighter-rouge&quot;&gt;launch.json&lt;/code&gt; 的 remoteRoot 路徑改為跟 localRoot 一樣，完整的設定如下&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.2.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;configurations&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;request&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attach&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Actionhero Debugger (attach)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;protocol&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;inspector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9229&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;restart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;localRoot&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${workspaceFolder}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;outFiles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${workspaceRoot}/dist/**/*.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;sourceMaps&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;remoteRoot&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${workspaceFolder}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;至於 Actionhero Debugger (launch) 則因為我在 Windows 下使用 bash 當指令操作介面，所以遇到了路徑問題，所以就忽略這個方式了，我期待等到 Windows 2004 版本 Release 之後，改用 WSL 2 當開發環境的時候，就能解決相關的問題。&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="ActionHero" /><category term="Debug" /><summary type="html">在之前 使用 VSCode Debug ActionHero (Nodejs) with TypeScript 文章中討論過如何使用 VSCode 對 Actionhero 專案進行 Debug，但是後來發現原本的方法失效了。</summary></entry><entry><title type="html">更新 Actionhero 版本從 v21 到 v22</title><link href="https://twblog.hongjianching.com/2020/04/18/upgrading-actionhero-from-v21-to-v22/" rel="alternate" type="text/html" title="更新 Actionhero 版本從 v21 到 v22" /><published>2020-04-18T00:00:00+08:00</published><updated>2020-04-18T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/04/18/upgrading-actionhero-from-v21-to-v22</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/04/18/upgrading-actionhero-from-v21-to-v22/">&lt;p&gt;一開始使用 Actionhero 的時候是 21 版，升級到 22 版的時候有一些變化，Actionhero 這次更新異動比較大的原因是，修改了啟動的機制, 接下來說明應該如何調整&lt;/p&gt;

&lt;h2 id=&quot;必要的修改&quot;&gt;必要的修改&lt;/h2&gt;

&lt;p&gt;更新 actionhero 到最新版， 並且新增兩個套件到開發依賴&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn upgrade actionhero@^22.0.7
yarn add @types/ioredis --dev
yarn add ts-node-dev --dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;刪除 &lt;code class=&quot;highlighter-rouge&quot;&gt;/boot.js&lt;/code&gt; 檔案&lt;/p&gt;

&lt;p&gt;新增 &lt;code class=&quot;highlighter-rouge&quot;&gt;/src/server.ts&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#!/usr/bin/env node
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Process&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;actionhero&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// load any custom code, configure the env, as needed&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// create a new actionhero process&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// handle unix signals and uncaught exceptions &amp;amp; rejections&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerProcessSignals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exitCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exitCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// start the app!&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// you can pass custom configuration to the process as needed&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接著更新 &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 關於 scripts 的部份&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;postinstall&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;npm run build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ts-node-dev --no-deps --transpile-only ./src/server.ts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ts-node-dev --transpile-only --inspect -- ./src/server.ts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node ./dist/server.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;pretest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;npm run build &amp;amp;&amp;amp; npm run lint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tsc --declaration&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;lint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier --check src/*/** __test__/*/**&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;pretty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier --write src/*/** __test__/*/**&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;非必要的調整&quot;&gt;非必要的調整&lt;/h2&gt;

&lt;p&gt;這邊的目的是讓舊專案更接近新版專案&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn remove ts-node
yarn add ws
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;更新 &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;，將版本都改為 &lt;code class=&quot;highlighter-rouge&quot;&gt;latest&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;actionhero&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;22.0.7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ws&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ioredis&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;winston&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;@types/node&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;@types/jest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;jest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;prettier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ts-jest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ts-node-dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;typescript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.actionherojs.com/tutorials/upgrade-path#Upgrading%20from%20v21%20to%20v22&quot;&gt;Upgrading from v21 to v22 - Actionhero&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="ActionHero" /><summary type="html">一開始使用 Actionhero 的時候是 21 版，升級到 22 版的時候有一些變化，Actionhero 這次更新異動比較大的原因是，修改了啟動的機制, 接下來說明應該如何調整</summary></entry><entry><title type="html">Run GitLab Runner in a container and support docker in docker</title><link href="https://twblog.hongjianching.com/2020/04/11/run-gitlab-runner-in-a-container-and-support-docker-in-docker/" rel="alternate" type="text/html" title="Run GitLab Runner in a container and support docker in docker" /><published>2020-04-11T00:00:00+08:00</published><updated>2020-04-11T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/04/11/run-gitlab-runner-in-a-container-and-support-docker-in-docker</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/04/11/run-gitlab-runner-in-a-container-and-support-docker-in-docker/">&lt;p&gt;使用 GitLab Runner，可以選擇直接安裝，或者使用 Docker Image，也是這次範例的方式。一般設定的話，不能在這個 Runner 執行 docker in docker 的操作，下面是需要的設定。&lt;/p&gt;

&lt;h2 id=&quot;register&quot;&gt;Register&lt;/h2&gt;

&lt;p&gt;首先是註冊 Runner，記得要準備好你的 TOKEN。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --rm -v /srv/gitlab-runner/runner-01/config:/etc/gitlab-runner gitlab/gitlab-runner register &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --non-interactive &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --executor &lt;span class=&quot;s2&quot;&gt;&quot;docker&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --description &lt;span class=&quot;s2&quot;&gt;&quot;The runner support docker in docker&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --docker-image alpine:latest &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --url &lt;span class=&quot;s2&quot;&gt;&quot;https://gitlab.com/&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --registration-token &lt;span class=&quot;s2&quot;&gt;&quot;YOUR_TOKEN&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --tag-list &lt;span class=&quot;s2&quot;&gt;&quot;dind&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --run-untagged&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --locked&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --access-level&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;not_protected&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --docker-privileged &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --docker-volumes &lt;span class=&quot;s2&quot;&gt;&quot;/certs/client&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其中的重點在最後兩個參數，分別是 &lt;code class=&quot;highlighter-rouge&quot;&gt;--docker-privilleged&lt;/code&gt; 提供 docker in docker 的權限，另一個是 &lt;code class=&quot;highlighter-rouge&quot;&gt;--docker-volumes&lt;/code&gt; 設定 TLS 的憑證儲存位置&lt;/p&gt;

&lt;p&gt;在指令一開始就有指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;-v /srv/gitlab-runner/runner-01/config:/etc/gitlab-runner&lt;/code&gt; 所以註冊後的資料會保留在 host 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;/srv/gitlab-runner/runner-01/config&lt;/code&gt; 位置&lt;/p&gt;

&lt;h2 id=&quot;run&quot;&gt;Run&lt;/h2&gt;

&lt;p&gt;有了註冊後的 config，就可以啟動 Runner 了，跟一般的啟動方式一樣。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d --name gitlab-runner-runner-01 --restart always &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /srv/gitlab-runner/runner-01/config:/etc/gitlab-runner &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /var/run/docker.sock:/var/run/docker.sock &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  gitlab/gitlab-runner:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;同樣因為有指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; 參數，所以會從指定的 Host 路徑讀取設定檔執行 runner。&lt;/p&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[Registering Runners&lt;/td&gt;
      &lt;td&gt;GitLab](https://docs.gitlab.com/runner/register/index.html#docker)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[Run GitLab Runner in a container&lt;/td&gt;
      &lt;td&gt;GitLab](https://docs.gitlab.com/runner/install/docker.html)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;todo-如果有機會再補充的資料&quot;&gt;TODO 如果有機會再補充的資料&lt;/h2&gt;

&lt;p&gt;.gitlab-ci-yml 範例
配合的 .gitlab-ci-yml 範例
真實的 gitlab project 範例？
可能的錯誤訊息&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="GitLab" /><category term="CI" /><category term="CD" /><category term="DevOps" /><category term="Docker" /><summary type="html">使用 GitLab Runner，可以選擇直接安裝，或者使用 Docker Image，也是這次範例的方式。一般設定的話，不能在這個 Runner 執行 docker in docker 的操作，下面是需要的設定。 Register 首先是註冊 Runner，記得要準備好你的 TOKEN。 docker run --rm -v /srv/gitlab-runner/runner-01/config:/etc/gitlab-runner gitlab/gitlab-runner register \ --non-interactive \ --executor &quot;docker&quot; \ --description &quot;The runner support docker in docker&quot; \ --docker-image alpine:latest \ --url &quot;https://gitlab.com/&quot; \ --registration-token &quot;YOUR_TOKEN&quot; \ --tag-list &quot;dind&quot; \ --run-untagged=&quot;true&quot; \ --locked=&quot;false&quot; \ --access-level=&quot;not_protected&quot; \ --docker-privileged \ --docker-volumes &quot;/certs/client&quot; 其中的重點在最後兩個參數，分別是 --docker-privilleged 提供 docker in docker 的權限，另一個是 --docker-volumes 設定 TLS 的憑證儲存位置 在指令一開始就有指定 -v /srv/gitlab-runner/runner-01/config:/etc/gitlab-runner 所以註冊後的資料會保留在 host 的 /srv/gitlab-runner/runner-01/config 位置 Run 有了註冊後的 config，就可以啟動 Runner 了，跟一般的啟動方式一樣。 docker run -d --name gitlab-runner-runner-01 --restart always \ -v /srv/gitlab-runner/runner-01/config:/etc/gitlab-runner \ -v /var/run/docker.sock:/var/run/docker.sock \ gitlab/gitlab-runner:latest 同樣因為有指定 -v 參數，所以會從指定的 Host 路徑讀取設定檔執行 runner。 Ref [Registering Runners GitLab](https://docs.gitlab.com/runner/register/index.html#docker) [Run GitLab Runner in a container GitLab](https://docs.gitlab.com/runner/install/docker.html) TODO 如果有機會再補充的資料 .gitlab-ci-yml 範例 配合的 .gitlab-ci-yml 範例 真實的 gitlab project 範例？ 可能的錯誤訊息</summary></entry><entry><title type="html">ActionHero 新增 action</title><link href="https://twblog.hongjianching.com/2020/04/04/actionhero-add-new-action/" rel="alternate" type="text/html" title="ActionHero 新增 action" /><published>2020-04-04T00:00:00+08:00</published><updated>2020-04-04T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2020/04/04/actionhero-add-new-action</id><content type="html" xml:base="https://twblog.hongjianching.com/2020/04/04/actionhero-add-new-action/">&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;src/actions&lt;/code&gt; 新增 &lt;code class=&quot;highlighter-rouge&quot;&gt;sum.ts&lt;/code&gt;，實作一個合計的 action&lt;/p&gt;

&lt;p&gt;這個 action 輸入 a, b 參數，回傳 sum 表示 a + b&lt;/p&gt;

&lt;h2 id=&quot;成果&quot;&gt;成果&lt;/h2&gt;

&lt;h3 id=&quot;程式碼&quot;&gt;程式碼&lt;/h3&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;actionhero&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SumAction&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sum&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;return sum of a and b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outputExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;使用&quot;&gt;使用&lt;/h3&gt;

&lt;p&gt;在網址列輸入 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8081/api/sum?a=100&amp;amp;b=23&lt;/code&gt;，回傳結果&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;sum&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;serverInformation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;serverName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my_actionhero_project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;apiVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;requestDuration&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;currentTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1585985448163&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;requesterInformation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;15065e43d00dbe702ef96bfed4dc6d884367f0ab-f351e412-d6ea-48f4-b5ef-46edb155fe13&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;fingerprint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;15065e43d00dbe702ef96bfed4dc6d884367f0ab&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;messageId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;f351e412-d6ea-48f4-b5ef-46edb155fe13&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;remoteIP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;receivedParams&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;100&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;23&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sum&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第一行 &lt;code class=&quot;highlighter-rouge&quot;&gt;sum&lt;/code&gt; 即為實作回傳結果&lt;/p&gt;

&lt;h2 id=&quot;說明&quot;&gt;說明&lt;/h2&gt;

&lt;p&gt;首先從 actionhere import &lt;code class=&quot;highlighter-rouge&quot;&gt;Action&lt;/code&gt; class&lt;/p&gt;

&lt;p&gt;接著擴展宣告實作的 &lt;code class=&quot;highlighter-rouge&quot;&gt;SumAction&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;construction&quot;&gt;construction()&lt;/h3&gt;

&lt;p&gt;在 建構式 &lt;code class=&quot;highlighter-rouge&quot;&gt;constructor&lt;/code&gt; 先呼叫 &lt;code class=&quot;highlighter-rouge&quot;&gt;super()&lt;/code&gt; 執行 &lt;code class=&quot;highlighter-rouge&quot;&gt;Action&lt;/code&gt; 的建構式&lt;/p&gt;

&lt;p&gt;接著設定 action 相關的參數&lt;/p&gt;

&lt;p&gt;name: 表示 action 的名稱外，同時代表 api 名稱&lt;/p&gt;

&lt;p&gt;description: 描述 action 的用途，給人類閱讀用的&lt;/p&gt;

&lt;p&gt;outputExample: 描述 action 的回傳參數的範例，也是給人類看的&lt;/p&gt;

&lt;p&gt;inputs: 表示 action 的輸入參數，沒有宣告的參數會被忽略，可以透過&lt;code class=&quot;highlighter-rouge&quot;&gt;required&lt;/code&gt;宣告參數為必需，如果缺少會直接拒絕執行 action&lt;/p&gt;

&lt;h3 id=&quot;run&quot;&gt;run()&lt;/h3&gt;

&lt;p&gt;當 api 呼叫後，會觸發 &lt;code class=&quot;highlighter-rouge&quot;&gt;run()&lt;/code&gt; 函數進行處理，常用參數&lt;/p&gt;

&lt;p&gt;params: 會帶入輸入參數&lt;/p&gt;

&lt;p&gt;response: 會回傳輸出參數&lt;/p&gt;

&lt;p&gt;connection: 使用者相關資訊&lt;/p&gt;

&lt;p&gt;這個範例中，從 &lt;code class=&quot;highlighter-rouge&quot;&gt;params&lt;/code&gt; 取得輸入參數 &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; 轉換為 number 後相加，存到 &lt;code class=&quot;highlighter-rouge&quot;&gt;sum&lt;/code&gt; 之後透過 &lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt; 回傳&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="w3HexSchool" /><category term="ActionHero" /><summary type="html">在 src/actions 新增 sum.ts，實作一個合計的 action 這個 action 輸入 a, b 參數，回傳 sum 表示 a + b 成果 程式碼 import { Action } from &quot;actionhero&quot;; export class SumAction extends Action { constructor() { super(); this.name = &quot;sum&quot;; this.description = &quot;return sum of a and b&quot;; this.outputExample = { sum: 3 }; this.inputs = { a: { required: true, }, b: { required: true, }, }; } async run({ params, response }) { let sum: number = 0; sum = Number.parseInt(params.a) + Number.parseInt(params.b); response.sum = sum; return response; } } 使用 在網址列輸入 http://localhost:8081/api/sum?a=100&amp;amp;b=23，回傳結果 { &quot;sum&quot;: 123, &quot;serverInformation&quot;: { &quot;serverName&quot;: &quot;my_actionhero_project&quot;, &quot;apiVersion&quot;: &quot;0.1.0&quot;, &quot;requestDuration&quot;: 2, &quot;currentTime&quot;: 1585985448163 }, &quot;requesterInformation&quot;: { &quot;id&quot;: &quot;15065e43d00dbe702ef96bfed4dc6d884367f0ab-f351e412-d6ea-48f4-b5ef-46edb155fe13&quot;, &quot;fingerprint&quot;: &quot;15065e43d00dbe702ef96bfed4dc6d884367f0ab&quot;, &quot;messageId&quot;: &quot;f351e412-d6ea-48f4-b5ef-46edb155fe13&quot;, &quot;remoteIP&quot;: &quot;127.0.0.1&quot;, &quot;receivedParams&quot;: { &quot;a&quot;: &quot;100&quot;, &quot;b&quot;: &quot;23&quot;, &quot;action&quot;: &quot;sum&quot; } } } 第一行 sum 即為實作回傳結果 說明 首先從 actionhere import Action class 接著擴展宣告實作的 SumAction construction() 在 建構式 constructor 先呼叫 super() 執行 Action 的建構式 接著設定 action 相關的參數 name: 表示 action 的名稱外，同時代表 api 名稱 description: 描述 action 的用途，給人類閱讀用的 outputExample: 描述 action 的回傳參數的範例，也是給人類看的 inputs: 表示 action 的輸入參數，沒有宣告的參數會被忽略，可以透過required宣告參數為必需，如果缺少會直接拒絕執行 action run() 當 api 呼叫後，會觸發 run() 函數進行處理，常用參數 params: 會帶入輸入參數 response: 會回傳輸出參數 connection: 使用者相關資訊 這個範例中，從 params 取得輸入參數 a, b 轉換為 number 後相加，存到 sum 之後透過 response 回傳</summary></entry></feed>