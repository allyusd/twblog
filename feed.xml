<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.2">Jekyll</generator><link href="https://twblog.hongjianching.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://twblog.hongjianching.com/" rel="alternate" type="text/html" /><updated>2017-12-17T22:29:42+08:00</updated><id>https://twblog.hongjianching.com/</id><title type="html">Jian-Ching 記事本</title><subtitle>An notebook website.</subtitle><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><entry><title type="html">wget 下載檔案遇到網頁亂碼問題</title><link href="https://twblog.hongjianching.com/2017/12/12/wget-download-files-with-page-encoding-problem/" rel="alternate" type="text/html" title="wget 下載檔案遇到網頁亂碼問題" /><published>2017-12-12T00:00:00+08:00</published><updated>2017-12-12T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2017/12/12/wget-download-files-with-page-encoding-problem</id><content type="html" xml:base="https://twblog.hongjianching.com/2017/12/12/wget-download-files-with-page-encoding-problem/">&lt;p&gt;今天在 FB 看到這個問題，試著解決後紀錄下來。&lt;/p&gt;

&lt;p&gt;原指令&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget -c -r -np -k -L -p http://yabit.et.nthu.edu.tw/2016storyland/document/report/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;不知道該網站的設定為何，雖然網頁是 UTF-8 編碼，但是 wget 或 Chrome 自動偵測的結果卻不是，
造成解析錯誤，上網查詢是否可以 wget 是否可以指定編碼，結果可以，加上 –remote-encoding=utf-8 參數，
這樣問題只解決一半，因為 wget 下載 UTF-8 檔名時會解析錯誤，還要加上 –restrict-file-names=nocontrol 參數。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;修正後&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget -c -r -np -k -L -p http://yabit.et.nthu.edu.tw/2016storyland/document/report/ --remote-encoding=utf-8 --restrict-file-names=nocontrol
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11350310/wget-and-special-characters&quot;&gt;Stack Overflow - wget and special characters&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="post" /><summary type="html">今天在 FB 看到這個問題，試著解決後紀錄下來。</summary></entry><entry><title type="html">Chrome 58 https error missing_subjectAltName</title><link href="https://twblog.hongjianching.com/2017/05/12/chrome-https-error-missing_subjectaltname/" rel="alternate" type="text/html" title="Chrome 58 https error missing_subjectAltName" /><published>2017-05-12T00:00:00+08:00</published><updated>2017-05-12T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2017/05/12/chrome-https-error-missing_subjectaltname</id><content type="html" xml:base="https://twblog.hongjianching.com/2017/05/12/chrome-https-error-missing_subjectaltname/">&lt;p&gt;Chrome 58 版之後 https 網站出現錯誤 missing_subjectAltName&lt;/p&gt;

&lt;p&gt;最近突然遇到 Chrome 瀏覽內部網站 https 時出現錯誤，「您的連線不是私人連線」，本來以前是個人電腦憑證出了狀況，後來才知道這個情況原因是 Chrome 58 版之後不再支援沒有 Subject Alternative Names 的憑證。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Since version 58, Chrome requires SSL certificates to use SAN (Subject Alternative Name) instead of the popular Common Name (CN)&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;測試 Firefox 53 同樣有此現象，可能從 48 開始就不支援 commonName maching
同步測試發現 IE 11 不受影響&lt;/p&gt;

&lt;h3 id=&quot;other-ref&quot;&gt;Other Ref&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/27294589/creating-self-signed-certificate-for-domain-and-subdomains-neterr-cert-commo&quot;&gt;Creating self signed certificate for domain and subdomains - NET::ERR_CERT_COMMON_NAME_INVALID&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/4981025180483584&quot;&gt;Support for commonName matching in Certificates (removed)&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://alexanderzeitler.com/articles/Fixing-Chrome-missing_subjectAltName-selfsigned-cert-openssl/&quot;&gt;Fixing Chrome 58+ [missing_subjectAltName] with openssl when using self signed certificates&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="post" /><summary type="html">Chrome 58 版之後 https 網站出現錯誤 missing_subjectAltName</summary></entry><entry><title type="html">Linux command netcat</title><link href="https://twblog.hongjianching.com/2017/05/04/linux-command-netcat/" rel="alternate" type="text/html" title="Linux command netcat" /><published>2017-05-04T00:00:00+08:00</published><updated>2017-05-04T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2017/05/04/linux-command-netcat</id><content type="html" xml:base="https://twblog.hongjianching.com/2017/05/04/linux-command-netcat/">&lt;p&gt;Netcat 是 Linux 下的網路工具，這裡用來進行網路頻寬測試。&lt;/p&gt;

&lt;h1 id=&quot;ubuntu-install&quot;&gt;Ubuntu Install&lt;/h1&gt;

&lt;p&gt;Ubuntu 16.04.2 LTS 版本已預裝 netcat, 如果你的環境沒有可以自行安裝&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install netcat
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;server-side&quot;&gt;Server Side&lt;/h1&gt;

&lt;p&gt;Netcat 開啟 port 12345 進行偵聽, 等待 client 連線&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nc -vvlnp 12345 &amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果想要使用系統 port 像是 80 的話需要 root&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nc -vvlnp 80 &amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;client-side&quot;&gt;Client Side&lt;/h1&gt;

&lt;p&gt;使用 dd 產生資料，並透過 netcat 傳送到 server
此範例會產生 1GM 的資料量 (1MB * 1K)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1M &lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1K | nc -vvn 13.75.44.147 80
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;demo-result&quot;&gt;Demo Result&lt;/h1&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Connection to 13.75.44.147 80 port &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tcp/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; succeeded!
1024+0 records &lt;span class=&quot;k&quot;&gt;in
&lt;/span&gt;1024+0 records out
1073741824 bytes &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.1 GB, 1.0 GiB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; copied, 14.2554 s, 75.3 MB/s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;infinite-loop-server&quot;&gt;Infinite Loop Server&lt;/h1&gt;

&lt;p&gt;如果需要進行連續測試的話可以使用 shell 進行迴圈&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;sudo nc -vvlnp 80 &amp;gt;/dev/null
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;ref&quot;&gt;Ref&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://askubuntu.com/questions/7976/how-do-you-test-the-network-speed-betwen-two-boxes&quot;&gt;How do you test the network speed betwen two boxes?&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="post" /><summary type="html">Netcat 是 Linux 下的網路工具，這裡用來進行網路頻寬測試。</summary></entry><entry><title type="html">Google Cloud OnBoard 2017 Taipei</title><link href="https://twblog.hongjianching.com/2017/04/19/google-cloud-onboard-2017-taipei/" rel="alternate" type="text/html" title="Google Cloud OnBoard 2017 Taipei" /><published>2017-04-19T00:00:00+08:00</published><updated>2017-04-19T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2017/04/19/google-cloud-onboard-2017-taipei</id><content type="html" xml:base="https://twblog.hongjianching.com/2017/04/19/google-cloud-onboard-2017-taipei/">&lt;p&gt;2017-04-19 Google Cloud OnBoard 活動在台北國際會議中心舉行。&lt;/p&gt;

&lt;h1 id=&quot;活動心得&quot;&gt;活動心得&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/2017-04-19-google-cloud-onboard-2017-taipei/IMG_0291-800.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;這次從台中出發，遇到交流道車禍塞車，到會場時已經十點了。&lt;/p&gt;

&lt;p&gt;會場人超多超滿的，比想像中還要多很多啊！&lt;/p&gt;

&lt;p&gt;唯一可惜的是會場是大會堂，非預期中可以使用筆電的桌子。&lt;/p&gt;

&lt;p&gt;預期是因為之前參加 AWSome Day 2014 Taipei 印象所致。&lt;/p&gt;

&lt;p&gt;虧我還建議同事帶筆電跟事前申請帳號，方便現場操作，對他們真不好意思。&lt;/p&gt;

&lt;h2 id=&quot;資訊&quot;&gt;資訊&lt;/h2&gt;
&lt;p&gt;Google Cloud 在亞洲機房有：日本、&lt;strong&gt;台灣&lt;/strong&gt;、新加坡。&lt;/p&gt;

&lt;p&gt;台灣的機房在&lt;a href=&quot;https://www.google.com/about/datacenters/inside/locations/changhua-county/&quot;&gt;彰化&lt;/a&gt;，是目前全球四大雲端平台唯一有台灣機房的平台。&lt;/p&gt;

&lt;p&gt;這是網路找到的 ping 值查詢：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gcping.com/&quot;&gt;Measure your latency to GCP regions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;講者介紹的中文說明 GitBook，是由 GCPUG.TW 社群提供：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gitbook.com/book/gcpug-tw/google-cloud-platform-in-practice&quot;&gt;Google Cloud Platform in Practice&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;活動紀錄照片&quot;&gt;活動紀錄照片&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;本次活動手冊&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;廠商紀念品&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/2017-04-19-google-cloud-onboard-2017-taipei/IMG_0301-400.jpg&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/2017-04-19-google-cloud-onboard-2017-taipei/IMG_0304-400.jpg&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;活動紀念T (正面)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;活動紀念T (背面)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/2017-04-19-google-cloud-onboard-2017-taipei/IMG_0308-400.jpg&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/2017-04-19-google-cloud-onboard-2017-taipei/IMG_0310-400.jpg&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;活動證書&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2017-04-19-google-cloud-onboard-2017-taipei/IMG_0303-400.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;free-resouce&quot;&gt;Free Resouce&lt;/h2&gt;
&lt;h3 id=&quot;cloud-source-repositories&quot;&gt;Cloud Source Repositories&lt;/h3&gt;
&lt;p&gt;This Beta release of Cloud Source Repositories is free and can be used to store up to 1 GB of source files.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;跟 GitHub、Bitbucket、GitLab 一樣的 Git 倉庫服務，目前 Beta，免費提供 1 GB 的空間。&lt;/p&gt;

&lt;h3 id=&quot;cloud-shell&quot;&gt;Cloud Shell&lt;/h3&gt;
&lt;p&gt;Google Cloud Shell is free for customers of Google Cloud Platform.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Cloud Shell 其實是一台已經預裝很多程式套件的 Linux 虛擬機，可以用來進行 Cloud API 測試，還提供網頁檢視，拿來寫個簡單程式也可以。重點是，免費，而且有 5 G 的持久性硬碟儲存空間，限制是 20 分鐘沒有動作就會關閉此環境，不能拿來當服務端使用。&lt;/p&gt;

&lt;p&gt;註：如果要一個真正免費 Linux VM，Google 也有提供：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/free/docs/always-free-usage-limits&quot;&gt;Always Free Usage Limits&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;google-cloud-platform-介紹&quot;&gt;Google Cloud Platform 介紹&lt;/h1&gt;
&lt;p&gt;接下來依自己關注的部份進行筆記，非完整列表。大部份是簡報內容。&lt;/p&gt;

&lt;h2 id=&quot;iam&quot;&gt;IAM&lt;/h2&gt;
&lt;p&gt;關於權限控管的部份，因為遲到，這部份沒有聽到。&lt;/p&gt;

&lt;h2 id=&quot;google-cloud-sdk&quot;&gt;Google Cloud SDK&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;CLI tool&lt;/li&gt;
  &lt;li&gt;Docker Image: google/clound-sdk&lt;/li&gt;
  &lt;li&gt;Cloud Shell 使用&lt;/li&gt;
  &lt;li&gt;RESTful APIs&lt;/li&gt;
  &lt;li&gt;APIs Explorer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;完整的工具，完全符合開發者的需求。&lt;/p&gt;

&lt;h2 id=&quot;app-engine&quot;&gt;App Engine&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;建構可擴充的 Web 應用程式或行動通訊後端平台 (Platform as a Service)&lt;/li&gt;
  &lt;li&gt;簡化開發、維護及擴充等作業，專注於應用程式的開發&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;App Engine is PaaS (完全受管理的服務 NoOps)
Compute Engine is IaaS (受管理的基礎架構 DevOps)&lt;/p&gt;

&lt;h2 id=&quot;儲存裝置&quot;&gt;儲存裝置&lt;/h2&gt;

&lt;h3 id=&quot;cloud-datastore&quot;&gt;Cloud Datastore&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;NoSQL&lt;/li&gt;
  &lt;li&gt;自動擴充並提供完全的管理&lt;/li&gt;
  &lt;li&gt;內建備援能力&lt;/li&gt;
  &lt;li&gt;支援 ACID 交易&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cloud-storage&quot;&gt;Cloud Storage&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;BLOB (Binary Large Object)&lt;/li&gt;
  &lt;li&gt;Not filesystem, but can use tool access like filesystem&lt;/li&gt;
  &lt;li&gt;Object, Not Block, No space limit&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cloud-bigtable&quot;&gt;Cloud BigTable&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;???&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cloud-sql&quot;&gt;Cloud SQL&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;MySQL 5.5, 5.6&lt;/li&gt;
  &lt;li&gt;PostgreSQL BETA&lt;/li&gt;
  &lt;li&gt;垂直擴充、水平擴充&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cloud-spanner&quot;&gt;Cloud Spanner&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;新服務&lt;/li&gt;
  &lt;li&gt;看起來結合所有資料庫的優勢&lt;/li&gt;
  &lt;li&gt;???&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;google-container-engine&quot;&gt;Google Container Engine&lt;/h2&gt;
&lt;p&gt;Kubernetes，容器管理叢集系統。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;透過 Deployment 與 Service 提供行型服務管理&lt;/li&gt;
  &lt;li&gt;Blue Green Deployment&lt;/li&gt;
  &lt;li&gt;Rolling Update&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;google-compute-engine&quot;&gt;Google Compute Engine&lt;/h2&gt;
&lt;p&gt;就是 VM，虛擬機，擁有完整 OS 的控制權&lt;/p&gt;

&lt;h2 id=&quot;網路&quot;&gt;網路&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;負載平衡 Load balancing&lt;/li&gt;
  &lt;li&gt;Clound CDN&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;運用與工具&quot;&gt;運用與工具&lt;/h2&gt;

&lt;h3 id=&quot;google-stackdrive&quot;&gt;Google Stackdrive&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;整合監控、登入、診斷&lt;/li&gt;
  &lt;li&gt;橫跨 Google Clound Platform 與 Amazone Web Srvices 提供服務&lt;/li&gt;
  &lt;li&gt;Open source agent 的整合&lt;/li&gt;
  &lt;li&gt;強大的資料蒐集、分析工具&lt;/li&gt;
  &lt;li&gt;與 PagerDuty、BMC、Splunk 等的協同合作&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;deployment-manager&quot;&gt;Deployment Manager&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;基礎架構管理服務&lt;/li&gt;
  &lt;li&gt;產生記載環境的 .yaml 範本，為了建立資源而使用 Deployment Manager&lt;/li&gt;
  &lt;li&gt;提供可重複執行的部署&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;big-data&quot;&gt;Big Data&lt;/h2&gt;
&lt;p&gt;???&lt;/p&gt;

&lt;h2 id=&quot;machine-learning&quot;&gt;Machine Learning&lt;/h2&gt;
&lt;p&gt;???&lt;/p&gt;

&lt;p&gt;最後兩個 Big Data 跟 Machine Learning 已經脫離學習的範圍。&lt;/p&gt;

&lt;h1 id=&quot;結語&quot;&gt;結語&lt;/h1&gt;
&lt;p&gt;這次活動讓我下定決心申請 Google Cloud Platform 帳號，之後應該會好好利用一下免費測試的機會。&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;https://cloud.google.com/source-repositories/pricing&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;https://cloud.google.com/shell/pricing&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="post" /><summary type="html">2017-04-19 Google Cloud OnBoard 活動在台北國際會議中心舉行。</summary></entry><entry><title type="html">在 Windows 7 使用 Vagrant 建立 Docker VM 環境</title><link href="https://twblog.hongjianching.com/2016/07/10/use-vagrant-create-ubuntu-with-docker-in-windows-7/" rel="alternate" type="text/html" title="在 Windows 7 使用 Vagrant 建立 Docker VM 環境" /><published>2016-07-10T00:00:00+08:00</published><updated>2016-07-10T00:00:00+08:00</updated><id>https://twblog.hongjianching.com/2016/07/10/use-vagrant-create-ubuntu-with-docker-in-windows-7</id><content type="html" xml:base="https://twblog.hongjianching.com/2016/07/10/use-vagrant-create-ubuntu-with-docker-in-windows-7/">&lt;p&gt;需要安裝兩個軟體&lt;/p&gt;

&lt;p&gt;一、VirtualBox&lt;/p&gt;

&lt;p&gt;https://www.virtualbox.org/wiki/Downloads&lt;/p&gt;

&lt;p&gt;二、Vagrant&lt;/p&gt;

&lt;p&gt;https://www.vagrantup.com/downloads.html&lt;/p&gt;

&lt;p&gt;在下載的過程中，簡單介紹一下 Vagrant。&lt;/p&gt;

&lt;p&gt;Vagrant 官方定義為 「建立及設定輕量性、可重覆性及可攜性的開發環境」，主要是透過設定檔使用 VirtualBox 來建立一個虛擬機器 (Virtual Machine, VM)，是達成 「Infrastructure As Code」的一種方式。&lt;/p&gt;

&lt;p&gt;Vagrant 包裝好的環境，稱為 Vagrant Box，本來在 Vagrant Cloud 提供上傳下載，但是現在被 Atlas 合併後不開放新帳號註冊了，所以只能下載 Box，不能上傳，除非你有原本 Vagrant Cloud 的帳號，幸好主要是要用 Docker，以後有 DockerHub，這些事情就不重要嘍。&lt;/p&gt;

&lt;p&gt;下載安裝完 VirutalBox 及 Vagrant 之後，就可以開啟命令提示字元 (cmd.exe) 來操作嘍。首先建立這次要使用的資料夾，會用來放 vagrant 設定檔&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir vagrant&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;buntu
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;vagrant&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;buntu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-07-10-use-vagrant-create-ubuntu-with-docker-in-windows-7/001.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;目標版本為 Ubuntu 14.04 LTS ，直接用已經存在的 Box 來進行初始化。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant init ubuntu/trusty64
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-07-10-use-vagrant-create-ubuntu-with-docker-in-windows-7/002.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;初始化會在資料夾產生一個 Vagrantfile，是 Vagrant 主要的設定檔，目前只有指定 Box 名稱，如果想要設定 cpu, memory 等等，也在這裡設定，目前先用預設值來啟動 VM。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant up
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-07-10-use-vagrant-create-ubuntu-with-docker-in-windows-7/003.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果是第一次使用這個 Box，會從 Atlas 網站下載，時間視檔案大小及網路速度而定，第二次之後就會省去這個動作，順便一提，下載後 Box 存放的路徑在 %USERPROFILE%.vagrant.d\boxes。等進度條跑完，Vagrant 就會依照設定把 VM 開起來嘍。&lt;/p&gt;

&lt;p&gt;接著使用 ssh 登入 VM吧。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-07-10-use-vagrant-create-ubuntu-with-docker-in-windows-7/004.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這樣已經可以開始玩新建立的 VM 嘍，但是習慣用 PieTTY 連線的話怎麼辦呢？這時候就要回頭看一下啟動的訊息，其中最重要的是 22 (guest) =&amp;gt; 2222 (host) 的 Forwading ports 設定，代表連到本機的 2222 port 就可以連到 VM 的 22 ssh port 喔。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-07-10-use-vagrant-create-ubuntu-with-docker-in-windows-7/005.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;預設的帳密是 vagrant / vagrant&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-07-10-use-vagrant-create-ubuntu-with-docker-in-windows-7/006.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因為 Ubuntu 14.04 還沒有預裝 Docker，所以我們要先安裝，&lt;/p&gt;

&lt;p&gt;透過官方提供的指令可以快速完成相關安裝及設定。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sSL https://get.docker.com/ | sudo sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-07-10-use-vagrant-create-ubuntu-with-docker-in-windows-7/007.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到安裝的 Docker 版本是 1.11.2，且提示要使用非 root 操作 docker 的話，將該 user 加入 docker 群組中。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo usermod -aG docker &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;輸入後重新登入，使用指令測試一下 docker&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-07-10-use-vagrant-create-ubuntu-with-docker-in-windows-7/008.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;回過頭來看一下 Vagrant 的效果，&lt;/p&gt;

&lt;p&gt;只需要兩行指令，達到輕量性。&lt;/p&gt;

&lt;p&gt;(init 指令可改為從 GitHub 取得 Vagrantfile)&lt;/p&gt;

&lt;p&gt;直接使用 Box，為可重覆性。&lt;/p&gt;

&lt;p&gt;可以在 Windows, Linux, Max 使用，算是可攜性。&lt;/p&gt;

&lt;p&gt;以後就不需要苦惱要設定 VirtualBox 的 Image 要怎麼辦了，大大減少從 OS 安裝開始的流程，也不必靠文件的 SOP 來建立想要的環境，接下來就可以開始放心玩 Docker 嘍！&lt;/p&gt;

&lt;h2 id=&quot;udpate&quot;&gt;Udpate&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;2016-07-16 因為 williamyeh/ubuntu-trusty64-docker 除了安裝 docker 之外有其它客製化，為了保持環境單純，改用 ubuntu/trusty64 當範例&lt;/li&gt;
  &lt;li&gt;2017-12-12 搬移網站，調整為 markdown&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;資料來源&quot;&gt;資料來源&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codedata.com.tw/social-coding/vagrant-tutorial-2-playing-vm-with-vagrant/&quot;&gt;Vagrant Tutorial（2）跟著流浪漢把玩虛擬機&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codedata.com.tw/social-coding/vagrant-tutorial-3-vm-lifecycle/&quot;&gt;Vagrant Tutorial（3）細說虛擬機生滅狀態&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/26524691/vagrant-box-cant-login-with-password-from-virtualbox-gui&quot;&gt;Vagrant box: can’t login with password from VirtualBox GUI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://philipzheng.gitbooks.io/docker_practice/content/install/ubuntu.html&quot;&gt;《Docker —— 從入門到實踐­》正體中文版 - Ubuntu 系列安裝 Docker&lt;/a&gt;&lt;/p&gt;</content><author><name>洪健清</name><email>allyusd yahoo com tw</email><uri>https://www.HongJianChing.com/</uri></author><category term="Vagrant" /><category term="Windows7" /><category term="Ubuntu" /><category term="Docker" /><category term="VirtualBox" /><summary type="html">需要安裝兩個軟體</summary></entry></feed>